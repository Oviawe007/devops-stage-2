# version: '3.9'

# services:
#   db:
#     image: postgres:13
#     container_name: database
#     restart: always
#     env_file:
#       - backend/.env
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data_3:/var/lib/postgresql/data
#     network#       - mynet
    

#   adminer:
#     image: adminer
#     restart: always
#     networks:
#       - mynet

#   backend:
#     build: ./backend
#     container_name: backend
#     command:  bash -c "poetry run bash ./prestart.sh && poetry run uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"
#     depends_on:
#       - db
#     env_file:
#       - backend/.env
#     networks:
#       - mynet
  
#   frontend:
#     build: ./frontend
#     container_name: frontend  # Adjusted to mount only frontend directory
#      # Changed frontend port to avoid conflict with backend
#     env_file:
#       - frontend/.env
#     networks:
#       - mynet

#   nginx:
#     image: nginx:latest
#     container_name: nginx
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
#     ports:
#       - "80:80"
#       - "8080:8080"
#     depends_on:
#       - frontend
#       - backend
#       - adminer
#     networks:
#       - mynet

#   traefik:
#     image: traefik:v2.4
#     container_name: traefik
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#       - ./traefik.yml:/etc/traefik/traefik.yml
#     ports:
#       - "8090:8090"
#     networks:
#       - mynet


# volumes:
#   postgres_data_3:

# networks:


version: '3.8'

services:
  nginx-proxy:
    image: jc21/nginx-proxy-manager:latest
    restart: always
    ports:
      - "80:80"
      - "8090:81"
      - "443:443"
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    #networks:
      #- app-network

  postgres-db:
    image: postgres:13
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    #networks:
      #- app-network

  backend-container:
    build: ./backend
    environment:
      DATABASE_URL: postgres://app:changethis123@postgres-db:5432/app
    depends_on:
      - postgres-db
    ports:
      - "8000:8000"
    #networks:
      #- app-network

  frontend-container:
    build: ./frontend
    depends_on:
      - backend-container
    ports:
      - "5173:5173"
    #networks:
      #- app-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres-db
    #networks:
      #- app-network

#networks:
  #app-network:
  #  driver: bridge

volumes:
  postgres_data:
     driver: local
